package com.runningapi.runningapi.dto.strava.response.activity;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.time.ZonedDateTime;
import java.util.List;

public record StravaActivityResponse (
        @JsonProperty("id") Long id,
        @JsonProperty("resource_state") Integer resourceState,
        @JsonProperty("external_id") String externalId,
        @JsonProperty("upload_id") Long uploadId,
        @JsonProperty("athlete") Athlete athlete,
        @JsonProperty("name") String name,
        @JsonProperty("distance") Double distance,
        @JsonProperty("moving_time") Integer movingTime,
        @JsonProperty("elapsed_time") Integer elapsedTime,
        @JsonProperty("total_elevation_gain") Integer totalElevationGain,
        @JsonProperty("type") String type,
        @JsonProperty("sport_type") String sportType,
        @JsonProperty("start_date") ZonedDateTime startDate,
        @JsonProperty("start_date_local") ZonedDateTime startDateLocal,
        @JsonProperty("timezone") String timezone,
        @JsonProperty("utc_offset") Integer utcOffset,
        @JsonProperty("start_latlng") List<Double> startLatlng,
        @JsonProperty("end_latlng") List<Double> endLatlng,
        @JsonProperty("achievement_count") Integer achievementCount,
        @JsonProperty("kudos_count") Integer kudosCount,
        @JsonProperty("comment_count") Integer commentCount,
        @JsonProperty("athlete_count") Integer athleteCount,
        @JsonProperty("photo_count") Integer photoCount,
        @JsonProperty("map") Map map,
        @JsonProperty("trainer") Boolean trainer,
        @JsonProperty("commute") Boolean commute,
        @JsonProperty("manual") Boolean manual,
        @JsonProperty("private") Boolean isPrivate,
        @JsonProperty("flagged") Boolean flagged,
        @JsonProperty("gear_id") String gearId,
        @JsonProperty("from_accepted_tag") Boolean fromAcceptedTag,
        @JsonProperty("average_speed") Double averageSpeed,
        @JsonProperty("max_speed") Double maxSpeed,
        @JsonProperty("average_cadence") Double averageCadence,
        @JsonProperty("average_temp") Integer averageTemp,
        @JsonProperty("average_watts") Double averageWatts,
        @JsonProperty("weighted_average_watts") Integer weightedAverageWatts,
        @JsonProperty("kilojoules") Double kilojoules,
        @JsonProperty("device_watts") Boolean deviceWatts,
        @JsonProperty("has_heartrate") Boolean hasHeartrate,
        @JsonProperty("max_watts") Integer maxWatts,
        @JsonProperty("elev_high") Double elevHigh,
        @JsonProperty("elev_low") Double elevLow,
        @JsonProperty("pr_count") Integer prCount,
        @JsonProperty("total_photo_count") Integer totalPhotoCount,
        @JsonProperty("has_kudoed") Boolean hasKudoed,
        @JsonProperty("workout_type") Integer workoutType,
        @JsonProperty("suffer_score") Object sufferScore,
        @JsonProperty("description") String description,
        @JsonProperty("calories") Double calories,
        @JsonProperty("segment_efforts") List<SegmentEffort> segmentEfforts,
        @JsonProperty("splits_metric") List<SplitMetric> splitsMetric,
        @JsonProperty("laps") List<Lap> laps,
        @JsonProperty("gear") Gear gear,
        @JsonProperty("partner_brand_tag") Object partnerBrandTag,
        @JsonProperty("photos") Photos photos,
        @JsonProperty("highlighted_kudosers") List<HighlightedKudoser> highlightedKudosers,
        @JsonProperty("hide_from_home") Boolean hideFromHome,
        @JsonProperty("device_name") String deviceName,
        @JsonProperty("embed_token") String embedToken,
        @JsonProperty("segment_leaderboard_opt_out") Boolean segmentLeaderboardOptOut,
        @JsonProperty("leaderboard_opt_out") Boolean leaderboardOptOut
) {
}
